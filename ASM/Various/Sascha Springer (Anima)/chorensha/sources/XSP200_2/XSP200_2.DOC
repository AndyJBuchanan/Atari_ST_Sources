□■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□

　　　　ＸＳＰシステム バージョン１．ｘｘ → ２．００ 移行の手引き

□■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□■□


　このたびようやく、ＸＳＰバージョン２．００のリリースにたどり着くことがで

きました。ＸＳＰバージョン１．９９から１年半ぶりのリリースとなります。

　この間、様々な改良が加えられ、仕様自体も細部に渡って変更されました。バー

ジョン１．ｘｘのヘボ仕様のいくつかは、容赦なく廃止されました。また、新たな

機能が多数追加されました。

　余りに変更点が多いため、”ＸＳＰ”の名前自体も変更し、心機一転しようとも

考えたのですが、「ＸＳＰで馴染んじゃったから・・・」というユーザーの方々の

声もあり、またユーザーの混乱を招き兼ねないということから、名前自体の変更は

しませんでした。

　今回のバージョンアップでは、関数自体の名前はそのままで、動作が違うという

ケースの変更が多発しています。本来ならそのような場合は関数名にアンダーバー

を付けたり、末端に "2" と付記するなどして区別できるようにしておくのですが、

バージョン１．ｘｘのフォローのために関数名の視認性を犠牲にするのは今回のス

タンスに反するということで、そういったフォローの類いは行なわないことにしま

した。

　つまりこういうことです。バージョン１．ｘｘはキレイさっぱり忘れちゃって下

さい。ＸＳＰは進化してますから、ためらわずについてきて下さい。


　それでは、バージョン１．ｘｘからの変更点をまとめます。


●　バージョン２．００で改良された点

　・ＸＳＰシステムと衝突することなく、ユーザー独自の帰線期間割り込み処理と
　　ラスター割り込み処理が実行できるような機能をサポートした。

　・ＰＣＭ８Ａと割り込み衝突しないようにＰＣＭ８Ａ側にパッチを当てる関数が
　　オマケで付いている。

　・スプライト間表示優先度の指定が、従来の３２段階から６４段階に拡張された。

　・スプライト表示数増加に伴い生じる優先度破綻を軽減するアルゴリズムを導入
　　（ＸＳＰ＿ＭＯＤＥ３にて動作する）。

　・スプライト表示数増加アルゴリズムの変更。それに伴い、表示数２５６前後に
　　おいて大幅な処理速度向上が認められた。

　・複合スプライトのメモリ展開の高速化。

　・未使用ＰＣＧエリア検索アルゴリズムの大幅改良とそれに伴う高速化。



●　その他の注意すべき変更点について

　・複合スプライト形状データのフォーマットが、若干変更された。具体的には、
　　フレームデータ構造体のメンバー "rv" "pt" のメモリ配置の交換と、リファレ
　　ンスデータ構造体のメンバー "index" が直接アドレスをポイントする "ptr" 
　　というメンバーに変更された。

　・レジスタ依存の引数受け渡しは拡張性に乏しく、バージョンアップの妨げにな
　　るという理由から、アセンブラ版のライブラリを廃止した。アセンブラ上から
　　ＸＳＰシステムをコールする場合は、Ｃ言語の関数コール方法に準拠すること
　　とする。

　・最大２５６枚モードを廃止した。

　・さらにサイズが大きくなった。

　・さらにメモリ消費量が増えた（現在総計約３４Ｋバイトを消費）。

　・XSPlib.H が、XSP2lib.H に改名された。

　・XSPlibC.o が、XSP2lib.o に改名された。（XSPlibA.o は前述の通り廃止。）


●　バージョン１．ｘｘの各関数について

　・xsp_on関数　　　　 → 仕様変更なし。

　・xsp_off関数　　　　→ 仕様変更なし。

　・xsp_pcgdat_set関数 → 仕様変更なし。

　・xsp_mask_set関数　 → 廃止。代替関数 xsp_pcgmask_on／off関数を新規導入。

　・xsp_mode2関数　　　→ xsp_mode関数に改名。仕様変更あり。

　・xsp_objdat_set関数 → 仕様変更あり（形状データフォーマット変更のため）。

　・xsp_vsync関数　　　→ 仕様変更なし。

　・xsp_set関数　　　　→ 仕様変更なし。

　・xobj_set関数　　　 → 仕様変更なし。

　・xsp_set_st関数　　 → 仕様変更なし。

　・xobj_set_st関数　　→ 仕様変更なし。

　・xsp_out関数　　　　→ 仕様変更なし。

　・xsp_divy_set2関数　→ 廃止。

　・xsp_wpoke関数　　　→ 廃止。

　・xsp_wtrans関数　　 → 廃止。

　・xsp_vertical関数　 → 仕様変更なし。



●　バージョン２．００から新規導入された関数とその機能の簡易説明

　・xsp_pcgmask_on関数　：ＰＣＧエリアのマスクの設定。

　・xsp_pcgmask_off関数 ：ＰＣＧエリアのマスクの解除。

　・xsp_vsyncint_on関数 ：ユーザー独自の帰線期間割り込み処理の設定。

　・xsp_vsyncint_off関数：ユーザー独自の帰線期間割り込み処理の解除。

　・xsp_hsyncint_on関数 ：ユーザー独自のラスター割り込み処理の設定。

　・xsp_hsyncint_off関数：ユーザー独自のラスター割り込み処理の解除。




